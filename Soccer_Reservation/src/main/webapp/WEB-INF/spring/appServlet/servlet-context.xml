<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DB 접속 정보를 가지고 있는 문서 읽어 들이기 -->
	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>classpath:com/soccer/rv/mybatis/db.properties
			</beans:value>
		</beans:property>
	</beans:bean>
	<!-- SqlSession 객체를 bean 하기위한설정 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<beans:property name="driverClass" value="${driver}" />
		<beans:property name="url" value="${url}" />
		<beans:property name="username" value="${username}" />
		<beans:property name="password" value="${password}" />
	</beans:bean>

	<beans:bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:com/soccer/rv/mybatis/Configuration.xml" />
	</beans:bean>

	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sessionFactory" />
	</beans:bean>
	
	<!-- 어노테이션으로 트렌젝션 처리 하도록 설정 -->
	<tx:annotation-driven transaction-manager="txManager"/>


	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.soccer.rv" />
	<context:component-scan base-package="com.soccer.rv.users.*"/>
	<context:component-scan base-package="com.soccer.rv.review.*"/>
	<context:component-scan base-package="com.soccer.rv.field.*"/>
	<context:component-scan base-package="com.soccer.rv.position.*"/>
	<context:component-scan base-package="com.soccer.rv.reser.*"/>
	<context:component-scan base-package="com.soccer.rv.util"/>
	<context:component-scan base-package="com.soccer.rv.admin.*"/>
	<context:component-scan base-package="com.soccer.rv.aspect"/>
	
	<aop:aspectj-autoproxy/>




</beans:beans>
